name: deploy
on: push

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #yourgame_platform: [desktop, web, android]
        yourgame_platform: [desktop, web] # ToDo: fix android

    steps:
      - uses: actions/checkout@v4

      - name: build docker image (desktop)
        run: docker build -t yourgame --build-arg NO_DOCS="true" --build-arg NO_EMSDK="true" --build-arg NO_ANDROID="true" https://github.com/duddel/yourgamelib.git
        if: startsWith(matrix.yourgame_platform, 'desktop')
      - name: build docker image (web)
        run: docker build -t yourgame --build-arg NO_DOCS="true" --build-arg NO_ANDROID="true" https://github.com/duddel/yourgamelib.git
        if: startsWith(matrix.yourgame_platform, 'web')
      - name: build docker image (android)
        run: docker build -t yourgame --build-arg NO_DOCS="true" --build-arg NO_EMSDK="true" https://github.com/duddel/yourgamelib.git
        if: startsWith(matrix.yourgame_platform, 'android')

      - name: build
        run: docker run --rm -v $(pwd):/code yourgame /bin/bash -c "cd build && ./build_${{ matrix.yourgame_platform }}_release.bash"
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.yourgame_platform }}
          path: build/_deploy/*

  build_windows:
    name: build windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: configure/build (win32)
        run: |
          cd build
          build_desktop_release_win32.cmd
        shell: cmd
      - name: configure/build (win64)
        run: |
          cd build
          build_desktop_release_win64.cmd
        shell: cmd
      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/_deploy/*
