name: examples

on: push

jobs:
  build_examples_desktop:
    name: desktop

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, windows-2016, windows-2019]
        example_name: [framework]

    steps:
    - uses: actions/checkout@v1
    - name: setup python
      uses: actions/setup-python@v1
      with:
        python-version: '3.5'
    - name: install python deps
      run: |
        python -m pip install --upgrade pip
        pip install Jinja2
    - name: install deps
      run: |
        sudo apt update
        sudo apt install libgl1-mesa-dev xorg-dev
      if: startsWith(matrix.os, 'ubuntu')
    - name: initialize
      run: |
        cd examples
        python ../tools/init.py ${{ matrix.example_name }} --noSources
    - name: configure
      run: |
        cd examples/${{ matrix.example_name }}
        mkdir _build
        cd _build
        cmake -DYOURGAME_PLATFORM=desktop ..
    - name: build
      run: |
        cd examples/${{ matrix.example_name }}/_build
        cmake --build .


  build_examples_wasm:
    name: wasm

    runs-on: ubuntu-16.04
    strategy:
      matrix:
        example_name: [framework]

    steps:
    - uses: actions/checkout@v1
    - name: install deps
      run: pip3 install Jinja2
    - name: install emsdk
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
    - name: initialize
      run: |
        cd examples
        python3 ../tools/init.py ${{ matrix.example_name }} --noSources
    - name: configure
      run: |
        source ./emsdk/emsdk_env.sh
        cd examples/${{ matrix.example_name }}
        mkdir _build
        cd _build
        emconfigure cmake -DYOURGAME_PLATFORM=wasm ..
    - name: build
      run: |
        source ./emsdk/emsdk_env.sh
        cd examples/${{ matrix.example_name }}/_build
        emmake cmake --build .


  build_examples_android:
    name: android

    runs-on: ubuntu-16.04
    strategy:
      matrix:
        example_name: [framework]

    steps:
    - uses: actions/checkout@v1
    - name: install deps
      run: pip3 install Jinja2
    - name: initialize
      run: |
        cd examples
        python3 ../tools/init.py ${{ matrix.example_name }} --noSources
    - name: assemble
      run: |
        cd examples/${{ matrix.example_name }}/android
        ./gradlew assembleDebug
