{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"<p>This guide explains how to get YourGameLib, create a user project and run it.</p>"},{"location":"#tldr","title":"TL;DR","text":"<p>If you are in a hurry, grab the pre-initialized template YourGameProject.zip and jump to Build the project. You need <code>Git</code>, <code>CMake</code> and a <code>C/C++ compiler</code>, as mentioned below.</p> <ul> <li>Pro: Fast, easy, <code>Python</code> not required</li> <li>Con: Manually rename \"YourGameProject\" across multiple files</li> </ul> <p>The recommended way for initializing a new project is following this guide, though.</p>"},{"location":"#requirements","title":"Requirements","text":"<p>The list of requirements for getting started:</p> <ul> <li><code>Git 1.7.0+</code></li> <li><code>Python 3.5+</code> with<ul> <li><code>Jinja2</code></li> <li><code>gitpython</code></li> </ul> </li> <li><code>CMake 3.6+</code></li> <li>A common <code>C/C++ compiler</code> capable of C++11</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>With YourGameLib, user projects get access to the YourGame API and a selected number of third-party libraries, to work with directly. YourGameLib is always built from source in user project context. </p> <p>Let's get the code by cloning the repository:</p> <pre><code>git clone --depth 1 https://github.com/duddel/yourgamelib.git\n</code></pre> <p>Installation done.</p>"},{"location":"#initialize-a-user-project","title":"Initialize a User Project","text":"<p>Initialize a new user project by running the <code>init/init.py</code> script. This creates the directory <code>./MyGame/</code> next to <code>./yourgamelib/</code> containing a couple of files derived from a template.</p> <pre><code>python ./yourgamelib/init/init.py MyGame\n</code></pre>"},{"location":"#build-the-project","title":"Build the project","text":"<p>The user project in <code>./MyGame/</code> already contains some scripts starting with <code>build_[..]</code>, so we go straight ahead and try to build our project for the <code>desktop</code> platform by running a suitable build script.</p> <pre><code>cd MyGame\n./build_desktop_debug.bash\n</code></pre> <p>If everything went fine, we now have an executable that renders something like this: a cube in a grid.</p> <p></p>"},{"location":"#next-steps","title":"Next Steps","text":"<p>Check out the examples, the API and other target platforms.</p>"},{"location":"Development/","title":"Development","text":""},{"location":"Development/#clang-tidy-warnings","title":"clang-tidy Warnings","text":"<p><code>clang-tidy</code> log: clang-tidy_log.txt.</p> <p>Processed log: clang-tidy_results.txt.</p>"},{"location":"Development/#platform-namespaces","title":"Platform Namespaces","text":""},{"location":"Development/#notes","title":"Notes","text":"<ul> <li>Deploy <code>web</code> examples to <code>gh-pages</code></li> <li>Fix NDK installation in <code>Dockerfile</code></li> <li>Report <code>clang-format</code> violations</li> <li>What external projects to include in <code>clang-tidy</code> lib build? (<code>yg_cmake_lib.bash</code>)</li> <li>What external projects to include (by defining <code>YOURGAME_EXTPROJ_&lt;project&gt;</code>) for Doxygen? (<code>Doxyfile</code>)</li> </ul>"},{"location":"Examples/","title":"Examples","text":""},{"location":"Examples/#bare","title":"Bare","text":"<p>Click here to load the demo below, or view it in full screen.</p>"},{"location":"Examples/#fps","title":"FPS","text":"<p>Click here to load the demo below, or view it in full screen.</p>"},{"location":"Examples/#framework","title":"Framework","text":"<p>Click here to load the demo below, or view it in full screen.</p>"},{"location":"Examples/#particles","title":"Particles","text":"<p>Click here to load the demo below, or view it in full screen.</p>"},{"location":"Examples/#sprites","title":"Sprites","text":"<p>Click here to load the demo below, or view it in full screen.</p>"},{"location":"Manual/","title":"Manual","text":"<p>NOTE: This site is UNDER CONSTRUCTION!</p>"},{"location":"Manual/#init-script","title":"Init Script","text":"<p>To integrate additional third-party libraries, use the <code>--extProj</code> option, like so:</p> <pre><code>python &lt;path_to_yourgamelib&gt;/init/init.py MyGame --extProj box2d lua\n</code></pre>"},{"location":"Manual/#build-system","title":"Build System","text":"<p><code>yourgamelib</code> is pulled into <code>MyGame</code> via CMake <code>add_subdirectory()</code>. This path needs to be adjusted in <code>CMakeLists.txt</code> if the projects are moved around. Alternatively, <code>MyGame</code> can be configured to clone <code>yourgamelib</code> by itself to make it independent of the original <code>yourgamelib</code> location. See template/CMakeLists.txt on how to do this.</p>"},{"location":"Manual/#assets-save-files-project-files","title":"Assets (Save files, Project files)","text":"<p>All files placed in <code>assets/</code> will be packed and made available to be loaded by the application at runtime.</p>"},{"location":"Manual/#user-code","title":"User Code","text":""},{"location":"Manual/#yourgame-api-and-namespaces","title":"YourGame API and Namespaces","text":""},{"location":"Manual/#toolbox","title":"Toolbox","text":""},{"location":"Manual/#third-party-libraries","title":"Third-party libraries","text":""},{"location":"Manual/#android","title":"Android","text":"<p>The Android project is configured to be built with a separate Gradle installation (Tested with 8.0.1). To build it, you need to</p> <ul> <li>Install the Android SDK</li> <li>set the environment variable <code>ANDROID_SDK_HOME</code> pointing to your Android SDK installation</li> </ul> <p>If this stops working with a newer Gradle version, open the project in Android Studio and let it generate a Gradle Wrapper for the project.</p> <p>Or try to fix it by looking into build.gradle. Maybe some dependencies have to be installed manually via the <code>sdkmanager</code>, or have to be updated in <code>build.gradle</code> to work with a newer Gradle version.</p>"},{"location":"Manual/#webassembly","title":"WebAssembly","text":""},{"location":"Manual/#requirements","title":"Requirements","text":"<p>To build for target <code>web</code>, you need:</p> <ul> <li>Emscripten</li> <li>Make sure the environment variable <code>EMSDK</code> is set and points to the emsdk root directory.</li> </ul>"},{"location":"Overview/","title":"API Overview","text":""},{"location":"Overview/#doxygen","title":"Doxygen","text":"<p>Jump to Doxygen.</p>"},{"location":"Overview/#interaction","title":"Interaction","text":"<p>Below is a sequence diagram to illustrate YourGameLib and User Code interaction.</p> <p></p>"}]}