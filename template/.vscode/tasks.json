{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "configure_build_all",
            "dependsOrder": "sequence",
            "dependsOn": [
                "desktop_cmake_debug",
                "desktop_build",
                "wasm_cmake",
                "wasm_build",
                "android_assembleDebug"
            ],
            "problemMatcher": []
        },
        {
            "label": "desktop_cmake_debug",
            "type": "shell",
            "windows": {
                "command": "cd ${workspaceFolder} & mkdir _build & cd _build & cmake .. -G \"Ninja\" -DYOURGAME_PLATFORM=desktop -DCMAKE_BUILD_TYPE=DEBUG"
            },
            "command": "cd ${workspaceFolder}; mkdir _build; cd _build; cmake .. -DYOURGAME_PLATFORM=desktop -DCMAKE_BUILD_TYPE=DEBUG",
            "problemMatcher": []
        },
        {
            "label": "desktop_build",
            "type": "shell",
            "windows": {
                "command": "cd ${workspaceFolder}/_build & cmake --build ."
            },
            "command": "cd ${workspaceFolder}/_build; cmake --build .",
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "android_assembleDebug",
            "type": "shell",
            "windows": {
                "command": "cd ${workspaceFolder}/android & gradlew assembleDebug"
            },
            "command": "cd ${workspaceFolder}/android; ./gradlew assembleDebug",
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "android_installDebug",
            "type": "shell",
            "windows": {
                "command": "cd ${workspaceFolder}/android & gradlew installDebug"
            },
            "command": "cd ${workspaceFolder}/android; ./gradlew installDebug",
            "problemMatcher": []
        },
        {
            "label": "wasm_cmake",
            "type": "shell",
            "windows": {
                "command": "cd ${workspaceFolder} & mkdir _build_wasm & cd _build_wasm & ${env:EMSDK}/emsdk_env & emconfigure cmake .. -DYOURGAME_PLATFORM=wasm"
            },
            "command": "cd ${workspaceFolder}; mkdir _build_wasm; cd _build_wasm; source ${env:EMSDK}/emsdk_env.sh; emconfigure cmake .. -DYOURGAME_PLATFORM=wasm",
            "problemMatcher": []
        },
        {
            "label": "wasm_build",
            "type": "shell",
            "windows": {
                "command": "cd ${workspaceFolder}/_build_wasm & ${env:EMSDK}/emsdk_env & emmake cmake --build ."
            },
            "command": "cd ${workspaceFolder}/_build_wasm; source ${env:EMSDK}/emsdk_env.sh; emmake cmake --build .",
            "problemMatcher": []
        }
    ]
}